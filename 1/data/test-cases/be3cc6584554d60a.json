{"uid":"be3cc6584554d60a","name":"test_successful_login","fullName":"tests.test_home#test_successful_login","historyId":"e4314461c2d18f3e0f88ff8c6a7a33f1","time":{"start":1717658943922,"stop":1717658943922,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9d09485e63556b9785e61c3bb442c8\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717658926980,"stop":1717658926997,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1717658943923,"stop":1717658944196,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"logged_in_test","time":{"start":1717658944196,"stop":1717658944207,"duration":11},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 35, in logged_in_test\n    user = setup_test_user()\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 45, in setup_test_user\n    register_response = SignUp().api_call(user)\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/post_sign_up.py\", line 7, in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/base_api.py\", line 33, in make_request\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9d09485e63556b9785e61c3bb442c8\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[],"attachments":[{"uid":"477d69e5aea9e8f","name":"log","source":"477d69e5aea9e8f.txt","type":"text/plain","size":726}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chrome_browser::0","time":{"start":1717658944227,"stop":1717658944285,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_home"},{"name":"host","value":"fv-az695-642"},{"name":"thread","value":"3416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_home"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":14,"unknown":0,"total":15},"items":[{"uid":"abe586e87931151d","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/36//#testresult/abe586e87931151d","status":"passed","time":{"start":1717654293930,"stop":1717654293969,"duration":39}},{"uid":"5ec14dfd92f5f427","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/34//#testresult/5ec14dfd92f5f427","status":"passed","time":{"start":1717614539865,"stop":1717614539910,"duration":45}},{"uid":"e039c7fa57fc4966","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/33//#testresult/e039c7fa57fc4966","status":"passed","time":{"start":1717612379666,"stop":1717612379710,"duration":44}},{"uid":"3cfc745af62de4ee","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/32//#testresult/3cfc745af62de4ee","status":"passed","time":{"start":1717437353010,"stop":1717437353047,"duration":37}},{"uid":"84efc81dd3e0da3f","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/31//#testresult/84efc81dd3e0da3f","status":"passed","time":{"start":1716835404129,"stop":1716835404193,"duration":64}},{"uid":"10d737febffc9975","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/30//#testresult/10d737febffc9975","status":"passed","time":{"start":1716832093839,"stop":1716832093883,"duration":44}},{"uid":"a398c0b1bfcd7f8f","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/29//#testresult/a398c0b1bfcd7f8f","status":"passed","time":{"start":1716748899126,"stop":1716748899164,"duration":38}},{"uid":"27962549f21f4716","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/28//#testresult/27962549f21f4716","status":"passed","time":{"start":1716046197490,"stop":1716046197531,"duration":41}},{"uid":"12ff9d0ea9c14501","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/27//#testresult/12ff9d0ea9c14501","status":"passed","time":{"start":1715955679016,"stop":1715955679059,"duration":43}},{"uid":"c74d1de0f4cca2cd","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/26//#testresult/c74d1de0f4cca2cd","status":"passed","time":{"start":1715529069984,"stop":1715529070025,"duration":41}},{"uid":"7fbcfa55506f685","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/25//#testresult/7fbcfa55506f685","status":"passed","time":{"start":1715528277544,"stop":1715528277585,"duration":41}},{"uid":"ba9de5df239d21d4","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/24//#testresult/ba9de5df239d21d4","status":"passed","time":{"start":1715499478227,"stop":1715499478265,"duration":38}},{"uid":"b82477476c6db441","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/23//#testresult/b82477476c6db441","status":"passed","time":{"start":1715498562374,"stop":1715498562411,"duration":37}},{"uid":"fc3e47a4d8e64d4","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/22//#testresult/fc3e47a4d8e64d4","status":"passed","time":{"start":1715498277825,"stop":1715498277868,"duration":43}}]},"tags":[]},"source":"be3cc6584554d60a.json","parameterValues":[]}